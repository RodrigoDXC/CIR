<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>true</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_fru_cir_situation_parametrization</collection>
        <condition>gs.hasRole('x_fru_cir.situation_manager') || gs.hasRole('x_fru_cir.senior_situation_manager')</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>cir_restrict_access_situation_param</name>
        <order>500</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var dimensions = [];
    if (gs.hasRole('x_fru_cir.situation_manager') && !gs.hasRole('admin')){
        var gr = new GlideRecord(CIRConstants.Tables.DIMENSION);
        //gr.addQuery("active", true);
        gr.query();
        while (gr.next()) {
            var groups = gr.getValue("groups").split(",");
            for (var group = 0; group < groups.length; ++group) {
                var belongsToGroup = new CIRSituationAccessManager().IsMemberOfForScopedApp(groups[group]);
                if (belongsToGroup) {
					dimensions.push("dimension=" + gr.getUniqueValue());
				}
            }
        }
        var dimensionQuery = dimensions.join("^OR");
        current.addEncodedQuery(dimensionQuery);
    }
    if (gs.hasRole('x_fru_cir.situation_manager') && !gs.hasRole('x_fru_cir.senior_situation_manager') && !gs.hasRole('admin')) {
        var countryCode = '';
		var grUser = new GlideRecord(CIRConstants.Tables.USER);
		if (grUser.get(gs.getUserID())) {
			countryCode = grUser.country;
		}
        var sysCountry = "";
        var grChoice = new GlideRecord("sys_choice");
        grChoice.addQuery("element", "country");
        grChoice.addQuery("name", "sys_user");
        grChoice.addQuery("language", "en");
        grChoice.addQuery("value", countryCode);
        grChoice.query();
        if (grChoice.next()) {
            sysCountry = grChoice.label.toString();
        }
        
        if(sysCountry !== "") {
			current.addQuery("country", sysCountry);
		}
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>Paulo.Gomes@fruitionpartners.pt</sys_created_by>
        <sys_created_on>2020-06-23 13:24:28</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ae8d928edb29581003b3533fd3961932</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>cir_restrict_access_situation_param</sys_name>
        <sys_overrides/>
        <sys_package display_value="Corporate Incident Response" source="x_fru_cir">265c101f13ab44100b8670a76144b0a2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Corporate Incident Response">265c101f13ab44100b8670a76144b0a2</sys_scope>
        <sys_update_name>sys_script_ae8d928edb29581003b3533fd3961932</sys_update_name>
        <sys_updated_by>hugo.reis</sys_updated_by>
        <sys_updated_on>2020-08-10 13:49:41</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=ae8d928edb29581003b3533fd3961932"/>
</record_update>
