<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function(spModal, $rootScope, $window, nowAttachmentHandler, $scope, spUtil, spAriaUtil, $location, spAriaFocusManager) {

	var c = this;

	// CLIENT VARIABLES
	c.rows = '';
	c.importSuccess = false;
	c.errors = [];
	c.action = '';

	// ATTACHMENT HANDLER - COPIED FROM OOTB WIDGET
	$scope.attachmentHandler = new nowAttachmentHandler(setAttachments, appendError);
	$scope.data.action = "";

	$scope.$evalAsync(function() {
		$scope.attachmentHandler.setParams($scope.data.table, $scope.data.sys_id, 1024 * 1024 * $scope.data.maxAttachmentSize);
		$scope.attachmentHandler.getAttachmentList();
	});

	// SET ATTACHMENT - COPIED FROM OOTB WIDGET
	function setAttachments(attachments, action) {
		if ($scope.submitting === true)
			return;

		$scope.attachments = attachments;
		c.data.attachments = attachments;

		if(attachments.length > 0 && !action){
			c.attached = true;
			spUtil.addInfoMessage(c.data.msgs.revalidateMessage);
		}
			
		if (!action)
			return;

		if (action === "added") {
			spAriaUtil.sendLiveMessage($scope.data.attachmentSuccessMsg);
		}

		$scope.data.action = action;
		spUtil.update($scope).then(function (response){// ATTACHMENT WILL BE PROCESSED SERVER SIDE
			c.handleResponse(response);
		});	
	}

	// FUNCTION TO HANDLE RESPONSE AFTER PROCESS FILE
	c.handleResponse = function(response) {															  
		if(response.success === true) {
			c.importSuccess = true;
			spUtil.addInfoMessage(response.sucessMessage);
			c.rows = response.rows;

		} else if (response.success  === false){ 
			spUtil.addErrorMessage(response.msgs.errorsFound);
			c.errors = response.errors;
		}
		c.attached = $scope.attachments.length > 0;
	};

	// APPEND ERROR - COPIED FROM OOTB WIDGET
	function appendError(error) {
		c.errorMessages.push(error);
		spUtil.addErrorMessage(error.msg + error.fileName);
	}

	// DELETE ATTACHMENT - COPIED FROM OOTB WIDGET
	$scope.confirmDeleteAttachment = function(attachment, $event) {
		if($scope.attachments.length == 1) {
			$scope.attachments.length = ''
		}

		$scope.attachmentHandler.deleteAttachment(attachment);
		c.attached = false;
		c.errors = [];
		c.server.update();
	};

	// FUNCTION THAT WILL OPEN A POP-UP FOR CONFIRMATION
	c.confirmWindow = function(title, msg, callback) {
		spModal.open({
			title: title,
			message: msg,
			buttons: [
				{
					label: c.data.msgs.cancelModalBtnMsg,
					cancel: true
				},
				{
					label: c.data.msgs.okBtn,
					primary: true
				}
			]
		}).then(callback);
	};
	
	// FUNCTION THAT WILL TRIGGER THE CREATION OF THE RECORDS AND REDIRECT TO NEXT PAGE
	c.triggerCreate = function () {
		var obj = {};
		obj.action = 'create';
		obj.rows = c.rows;

		c.server.get(obj).then(function(response){
			c.redirect(response.data.urls.next);
		})
	};

	// BACK BUTTON FUNCTIONALITY
	c.back = function () {
		if(c.data.validAssessment) {
			c.redirect(c.data.urls.back);
			
		} else {
			c.redirect(c.data.urls.defNew);
		}
	};

	// NEXT BUTTON FUNCTIONALITY
	c.next = function () {
		var msgs = c.data.msgs;
		c.action = 'create';
		c.confirmWindow(msgs.confirmLeaving, msgs.confirmSaving, function(){c.triggerCreate()});
	};

	// REPROCESS FILE BUTTON FUNCTIONALITY
	c.reporcessFile = function() {
		if($scope.attachments.length > 1){
			alert(c.data.msgs.manyAttachmnets);
			return;
		}
		var obj = {};
		obj.action = 'added';

		c.server.get(obj).then(function (response){
			c.handleResponse(response.data);
		});	
	};

	// FUNCTION TO HANDLE REDIRECT
	c.redirect = function(url) {
		var urlObj = $location.search(url);
		spAriaFocusManager.navigateToLink(urlObj.url());
	};
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.title {&#13;
  text-align: center;&#13;
  padding-top: 20px;&#13;
}&#13;
&#13;
.buttons-footer {&#13;
  padding-bottom: 50px;&#13;
  margin-top: 40px;&#13;
  margin-right: 30px;&#13;
}&#13;
&#13;
.back-button {&#13;
  border: 1px solid #717171;&#13;
}&#13;
&#13;
.action-btn {&#13;
  margin-right: 5px;&#13;
}&#13;
&#13;
.file-list-wrap {&#13;
	max-height: 15vh;&#13;
}&#13;
&#13;
hr {&#13;
  margin-right: 30px;&#13;
  margin-left: 30px;&#13;
}&#13;
&#13;
.align-center {&#13;
  text-align: center;&#13;
  margin-bottom: 50px;&#13;
}&#13;
&#13;
.download-button {&#13;
  font-size: 20px;&#13;
  margin: 50px;&#13;
  margin-bottom: 20px;&#13;
}&#13;
&#13;
.select-file-button {&#13;
  border: 1px solid #717171;&#13;
}&#13;
&#13;
.fa {&#13;
  font-size: large;&#13;
}&#13;
&#13;
time {&#13;
  display:none;&#13;
}&#13;
&#13;
#documents {&#13;
  width: 50%;&#13;
  margin-left: auto;&#13;
  margin-right: auto;&#13;
  margin-bottom: 50px;&#13;
}&#13;
&#13;
#documents + div {&#13;
  padding: 0&#13;
}&#13;
&#13;
.file-name {&#13;
	display: inline-block;&#13;
}&#13;
&#13;
.view-attachment {&#13;
	display: none&#13;
}&#13;
&#13;
button[title="Edit file name"] { // OVERRIDE THE DEFAULT OOTB BUTTON&#13;
  display: none;&#13;
}&#13;
&#13;
button[title="Delete"] { // OVERRIDE THE DEFAULT OOTB BUTTON&#13;
  padding: 0;&#13;
  display: inline-block;&#13;
}&#13;
&#13;
.tools {&#13;
	display: inline-block;&#13;
  float: right;&#13;
}&#13;
&#13;
.table-layout {&#13;
  border: 1px solid red;&#13;
  width: 100%;&#13;
  display: block;&#13;
  max-height: 30vh;&#13;
  min-height : 15vh;&#13;
  overflow-y: scroll;&#13;
}&#13;
&#13;
.table-align {&#13;
  margin-bottom: 50px;&#13;
	width: 50%;&#13;
  margin-left: auto;&#13;
  margin-right: auto;&#13;
}&#13;
&#13;
p {&#13;
	font-weight: bold;&#13;
}&#13;
&#13;
.error-td {&#13;
  padding: 5px;&#13;
  padding-left: 10px;&#13;
  padding-right: 10px;&#13;
  float: left;&#13;
  color : #a02622;&#13;
} </css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>cir-ciri-assessment-import</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>CIR CIRI Assessment Import</name>
        <option_schema/>
        <public>false</public>
        <roles>x_fru_cir.assessment_manager</roles>
        <script><![CDATA[(function() {

	// URL PARAMS
	data.sys_id = $sp.getParameter('assessment');

	// UTILS
	var widgetUtils = new CIRAssmtImportUtilsFP();
	var importUtils = new CIRAssmtImportUtilsFP();
	var cirModelUtils = new CIRAssmtModel();

	// VALID ASSESSMENT?
	data.validAssessment = cirModelUtils.ValidateAssessmentDefinitionId(data.sys_id);

	// DATA OBJECT
	data.tables = CIRConstants.Tables;
	data.pages = CIRConstants.AssessmentPortalConstants;
	data.table = data.tables.ASSESSMENT_DEFINITION;
	data.maxAttachmentSize = 24;
	data.attachments = input ? input.attachments : [];
	data.templateSysId = widgetUtils.GetAttachmentSysId();

	// REDIRECT DATA
	var URL_PREFIX = 'id=';
	data.urls = {};
	data.urls.back =	URL_PREFIX + data.pages.ASSESS_DEFINITION +
		'&table=' +data.tables.ASSESSMENT_DEFINITION +
		'&view=cir_portal_view&assessment='+ data.sys_id;
	data.urls.next = URL_PREFIX + data.pages.ASSESS_DEFINITION_ADD_SECTION +
		'&table=' +data.tables.ASSESSMENT_SECTION +
		'&view=cir_portal_view&assessment='+ data.sys_id;
	data.urls.defNew = URL_PREFIX + data.pages.ASSESSMENT_DEF_MANAGER_PAGE;

	// MESSAGES
	data.msgs = {};
	data.msgs.title = gs.getMessage('cir_assmt_ass_import_file_def');
	data.msgs.donwloadTemplate = gs.getMessage('cir_assmt_ass_import_download_template');
	data.msgs.selectFile = gs.getMessage('cir_assmt_ass_import_select_file_upload');
	data.msgs.nextButton = gs.getMessage('cir_assmt_ass_manager_next_btn');
	data.msgs.backBtn = gs.getMessage('cir_assmt_ass_manager_back_btn');
	data.msgs.processingErrors = gs.getMessage('cir_assmt_ass_import_process_errors');
	data.msgs.noAssessment = gs.getMessage('cir_assmt_ass_not_found', gs.getMessage('cir_assmt_assessment'));
	data.msgs.errorsFound = gs.getMessage('cir_assmt_ass_import_error_message');
	data.msgs.confirmLeaving = gs.getMessage('cir_assmt_confirm_leave');
	data.msgs.confirmSaving = gs.getMessage('cir_assmt_ass_file_processed');
	data.msgs.cancelModalBtnMsg = gs.getMessage('cir_assmt_list_manager_cancel_modal_btn');
	data.msgs.okBtn = gs.getMessage('cir_assmt_list_manager_ok_modal_btn');
	data.msgs.manyAttachmnets = gs.getMessage('cir_assmt_ass_many_attachments');
	data.msgs.revalidateFile = gs.getMessage('cir_assmt_ass_revalidate_file');
	data.msgs.revalidateMessage = gs.getMessage('cir_assmt_ass_revalidate_message'); 

	// INPUT HANDLER 
	if(input) {
		switch(input.action) {
			case 'added':			
				processFile();
				break;

			case 'create':
				createRecs(input);
				break;

			case 'delete' :
				widgetUtils.GetAssessmentDefinitionRecord(data.sys_id).deleteRecord();

		}
	}

	// FUNCTION THAT WILL CREATE THE SECTIONS, FIELDS AND CHOICES 
	function createRecs (input) {
		importUtils.ProcessObject(input.rows, data.sys_id);
	}

	// FUCNTION THAT WILL FIRST PROCESS THE FILE
	function processFile() {
		var respObj = widgetUtils.ProcessFile(data.sys_id, new sn_impex.GlideExcelParser());
		data.sucessMessage = gs.getMessage('cir_assmt_assessment_import_success');
		data.errors = respObj.errors;
		data.success = data.errors.length === 0;
		data.rows  = respObj.rows;
	}	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>Jorge.Diogo@fruitionpartners.pt</sys_created_by>
        <sys_created_on>2020-07-16 12:36:29</sys_created_on>
        <sys_id>65ff2c25dbca5410d4a73533f39619c2</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>CIR CIRI Assessment Import</sys_name>
        <sys_package display_value="Corporate Incident Response" source="x_fru_cir">265c101f13ab44100b8670a76144b0a2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Corporate Incident Response">265c101f13ab44100b8670a76144b0a2</sys_scope>
        <sys_update_name>sp_widget_65ff2c25dbca5410d4a73533f39619c2</sys_update_name>
        <sys_updated_by>Jorge.Diogo@fruitionpartners.pt</sys_updated_by>
        <sys_updated_on>2020-07-17 08:06:43</sys_updated_on>
        <template><![CDATA[<div>
  <div ng-if="c.data.validAssessment">
    <!-- TITLE -->
    <div> 
      <h2 class="title">
        <strong> {{::data.msgs.title}} </strong>
      </h2>
    </div>

    <!-- DOWNLOAD TEMPLATE -->
    <div ng-if="::data.templateSysId" class="download-button align-center"> 
      <a href='sys_attachment.do?sys_id={{::data.templateSysId}}'> {{::data.msgs.donwloadTemplate}} </a><br/>
    </div>

    <!-- SELECT FILE BUTTON -->
    <div style="margin-bottom: 20px;"class="align-center"> 
      <input type="file" style="display: none" multiple="true" ng-file-select="attachmentHandler.onFileSelect($files)" class="sp-attachments-input">
      <button ng-click="attachmentHandler.openSelector($event)" ng-disabled="c.attached || c.data.attachments.length >= 1" class="btn select-file-button ng-binding">
        <span>{{::data.msgs.selectFile}}</span>
        <span class="glyphicon glyphicon-paperclip"></span>
      </button>
      <button ng-if="c.attached && !c.errors.length && !c.rows" ng-click="c.reporcessFile()" class="btn select-file-button ng-binding">
        <span>{{::data.msgs.revalidateFile}}</span>
         <span class="glyphicon glyphicon-cog"></span>
      </button>
    </div>

    <!-- ATTACHMENT DISPLAY -->
    <div id="documents" class="tabcontent" ng-if="attachments.length">
      <div class="panel-body" style="max-height:700px; overflow-y: auto; padding:0;"> 
        <now-attachments-list template="sp_attachment"/>
      </div>
    </div>
    
    <!-- PROCESSING ERRORS -->
    <div ng-if="c.errors.length > 0 && c.attached" class="table-align">
      <div >
        <p style="color: #a02622">{{::data.msgs.processingErrors}}:</p>
        <table class="table-layout">
          <tr ng-repeat="error in c.errors" >
            <td class="error-td">{{error}}</td>
          </tr>
        </table>  
      </div>
    </div>
  </div>

  <!-- INVALID ASSESSMENT MSG -->
  <div ng-if="!c.data.validAssessment"> 
    <h2 class="title">
      <strong> {{::data.msgs.noAssessment}} </strong>
    </h2>
  </div>

  <!-- FOOTER BUTTONS -->
  <hr>
  <div class="buttons-footer ng-scope"> 
    <button ng-if="c.data.validAssessment" ng-click="c.next()" class="btn btn-primary action-btn pull-right next-button ng-binding" ng-disabled="!c.importSuccess || !c.attached">{{::data.msgs.nextButton}}</button> 
    <button ng-click="c.back()" class="btn action-btn pull-right back-button ng-binding">{{::data.msgs.backBtn}}</button> 
  </div>

</div>]]></template>
    </sp_widget>
</record_update>
