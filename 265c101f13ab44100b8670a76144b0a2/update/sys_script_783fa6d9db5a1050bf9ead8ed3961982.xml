<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_fru_cir_static_service_order</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_fru_cir_static_service_order">stateCHANGESTO3^EQ<item display_value="Closed" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="3"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>cir_static_fill_actual_hours_actual_cost</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	var actualFromTime = new GlideDateTime(current.getValue('actual_from_time'));
	var actualToTime = new GlideDateTime(current.getValue('actual_to_time'));
	
	current.actual_hours = calculateActualHours(current.actual_from_time,current.actual_to_time);
	current.actual_cost = new CIRStaticProtectionUtils().CalculateTariff(current.static_service.getRefRecord(), actualFromTime, actualToTime);

	function calculateActualHours(fTime, tTime) {
		var fromTime = new GlideTime();
		fromTime.setDisplayValue(fTime.getDisplayValue());

		var toTime = new GlideTime();
		toTime.setDisplayValue(tTime.getDisplayValue());

		return GlideDate.subtract(fromTime, toTime);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>hugo.reis</sys_created_by>
        <sys_created_on>2020-07-28 14:13:52</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>783fa6d9db5a1050bf9ead8ed3961982</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>cir_static_fill_actual_hours_actual_cost</sys_name>
        <sys_overrides/>
        <sys_package display_value="Corporate Incident Response" source="x_fru_cir">265c101f13ab44100b8670a76144b0a2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Corporate Incident Response">265c101f13ab44100b8670a76144b0a2</sys_scope>
        <sys_update_name>sys_script_783fa6d9db5a1050bf9ead8ed3961982</sys_update_name>
        <sys_updated_by>hugo.reis</sys_updated_by>
        <sys_updated_on>2020-08-10 08:25:24</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=783fa6d9db5a1050bf9ead8ed3961982"/>
</record_update>
