<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_fru_cir_static_service_order</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_fru_cir_static_service_order">state=3^ORactual_hoursVALCHANGES^ORactual_guardVALCHANGES^EQ<item display_value="Closed" endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="3"/>
            <item endquery="false" field="actual_hours" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="false" field="actual_guard" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>cir_static_check_for_exception</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var statusTime = false;
	var statusGuard = false;
	if(current.getValue('state') == '3'){
		var actualFromTime = new GlideTime();
		actualFromTime.setDisplayValue(current.actual_from_time.getDisplayValue());
		
		var actualToTime = new GlideTime();
		actualToTime.setDisplayValue(current.actual_to_time.getDisplayValue());
		
		var plannedFromTime = new GlideTime();
		plannedFromTime.setDisplayValue(current.planned_from_time.getDisplayValue());
		
		var plannedToTime = new GlideTime();
		plannedToTime.setDisplayValue(current.planned_to_time.getDisplayValue());
		
		if (actualFromTime != plannedFromTime || actualToTime != plannedToTime) {
			statusTime = true;
		}
		
		if (actualFromTime == plannedFromTime && actualToTime == plannedToTime) {
			statusTime = false;
		}
	}
	
	statusGuard = current.getValue('actual_guard') != current.getValue('planned_guard');
	current.exception_control = statusTime || statusGuard;
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>hugo.reis</sys_created_by>
        <sys_created_on>2020-07-28 13:27:42</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9b4ee6d9db5a1050bf9ead8ed3961989</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>cir_static_check_for_exception</sys_name>
        <sys_overrides/>
        <sys_package display_value="Corporate Incident Response" source="x_fru_cir">265c101f13ab44100b8670a76144b0a2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Corporate Incident Response">265c101f13ab44100b8670a76144b0a2</sys_scope>
        <sys_update_name>sys_script_9b4ee6d9db5a1050bf9ead8ed3961989</sys_update_name>
        <sys_updated_by>Paulo.Gomes@fruitionpartners.pt</sys_updated_by>
        <sys_updated_on>2020-07-29 09:52:11</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9b4ee6d9db5a1050bf9ead8ed3961989"/>
</record_update>
