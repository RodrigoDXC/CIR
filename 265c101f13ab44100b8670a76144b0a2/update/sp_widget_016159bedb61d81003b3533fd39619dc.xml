<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $rootScope, $timeout, spAriaFocusManager, spUtil, $location, $window, nowAttachmentHandler, $uibModal, spModal) {
    c = this;
    c.msgs = c.data.msgs;

    if (c.data.includeBreadcrumbs &&
        $rootScope.cirBreadcrumbsForForm &&
        $rootScope.cirBreadcrumbsForForm.length > 0) {

        var foundBreadcrumbIndex = $rootScope.cirBreadcrumbsForForm.findIndex(function(el) {
            return el.sys_id === c.data.sys_id;
        });
        if(foundBreadcrumbIndex < 0) {
            $rootScope.cirBreadcrumbsForForm.push({
                label: c.data.f.title,
                url: window.location.search,
                table: c.data.table,
                sys_id: c.data.sys_id
            });
        } else {
            $scope.$emit('sp.fix.breadcrumbs', foundBreadcrumbIndex);
        }
    } else {
        $rootScope.cirBreadcrumbsForForm = [{
                label: 'Home',
                url: '?id=' + $scope.portal.homepage
            },
            {
                label: c.data.f.title,
                url: window.location.search,
                table: c.data.table,
                sys_id: c.data.sys_id
            }
        ];

    }
    $scope.$emit('sp.update.breadcrumbs', $rootScope.cirBreadcrumbsForForm);

    $scope.mandatory = [];
    $scope.data.show_sql = false;
    $scope.saveButtonSuffix = spUtil.getAccelerator('s');
    $scope.adminMenu = {
        encodedPageUrl: encodeURIComponent($location.url()),
        getClientScriptCount: function() {
            var count = 0;
            if ($scope.data.f.client_script) {
                count += $scope.data.f.client_script.onChange.length;
                count += $scope.data.f.client_script.onLoad.length;
                count += $scope.data.f.client_script.onSubmit.length;
            }
            return count;
        }
    };

    $scope.getUIActions = function(type) {
        if ($scope.data.disableUIActions) {

            return [];
        }
        if (type) {
            var ui_actions = $scope.data.f._ui_actions.filter(function(action) {
                //We handle the primary action button separately.
                return !action.primary && action['is_' + type];
            });

            return ui_actions;
        } else {

            return $scope.data.f._ui_actions;
        }
    };

    $scope.getPrimaryAction = function() {
        var primaryActions = $scope.data.f._ui_actions.filter(function(action) {
            return action.primary;
        });
        return (primaryActions.length) ? primaryActions[0] : null;
    };

    $scope.getUIActionContextMenu = function(event) {
        var menu = [];
        if (event.ctrlKey)
            return menu;

        var contextActions = $scope.getUIActions('context');
        contextActions.forEach(function(action) {
            menu.push([action.name, function() {
                $scope.triggerUIAction(action);
            }]);
        });

        if (contextActions.length > 0)
            menu.push(null);
        menu.push([$scope.data.exportPDFMsg, function() {
            exportPDF("");
        }]);
        menu.push([$scope.data.exportPDFLandMsg, function() {
            exportPDF('true');
        }]);

        return menu;
    };

    function exportPDF(landscape) {
        $window.open("/" + $scope.data.f.table + ".do?PDF&landscape=" + landscape + "&sys_id=" + $scope.data.sys_id + "&sysparm_view=" + $scope.data.f.view);
    }

    //trigger the primary UI Action on save (if there is one)
    var deregister = $scope.$on('$sp.save', function() {
        var primaryAction = $scope.getPrimaryAction();
        if (primaryAction)
            $scope.triggerUIAction(primaryAction);
        $scope.showRelatedList();
    });
    $scope.$on('$destroy', function() {
        deregister();
    });

    $scope.triggerUIAction = function(action) {
        if ($scope.data.disableUIActions == 'true') {
            return;
        }

        if (g_form) {
            $timeout(function() {
                g_form.submit(action.action_name || action.sys_id);
                $scope.showRelatedList();
            });
        }
    };

    $scope.sendToInjury = function() {
        $location.search('id', 'cir_ciri_body_location');
    };

    $scope.sendToCaseLocation = function() {
        $location.search('id', 'cir_ciri_case_location');
    };

    //Start: Added as part of the implementation STSK0093041_MA

    $scope.deleteRecord = function() {
        $scope.data.action = 'delete';
        $scope.server.update().then(function(response) {


            var paramsRedirect = {
                id: 'cir_ciri_form',
                table: $rootScope.cirBreadcrumbsForForm[$rootScope.cirBreadcrumbsForForm.length - 2].table,
                sys_id: $rootScope.cirBreadcrumbsForForm[$rootScope.cirBreadcrumbsForForm.length - 2].sys_id,
                breadcrumbs: 'true'
            };
            $rootScope.cirBreadcrumbsForForm = $rootScope.cirBreadcrumbsForForm.slice(0, $rootScope.cirBreadcrumbsForForm.length - 2);
            $scope.$emit('sp.update.breadcrumbs', $rootScope.cirBreadcrumbsForForm);
            $location.search(paramsRedirect);
        });

    };

    //End_MA

    $scope.$on("spModel.uiActionComplete", function(evt, response) {
        var sysID = (response.isInsert) ? response.sys_id : $scope.data.sys_id;
        loadForm($scope.data.table, sysID).then(constructResponseHandler(response));
    });

    function constructResponseHandler(response) {
        return function() {
            var message;
            var eventName = "sp.form.record.updated";

            if (response.isInsert) {
                message = $scope.data.recordAddedMsg;
                var search = $location.search();
                search.sys_id = response.sys_id;
                search.spa = 1;
                $location.search(search).replace();

                $rootScope.cirBreadcrumbsForForm[$rootScope.cirBreadcrumbsForForm.length - 1] = {
                    label: c.data.f.title,
                    url: window.location.search.toString().replace('sys_id=-1', 'sys_id=' + response.sys_id)
                }
                $scope.$emit('sp.update.breadcrumbs', $rootScope.cirBreadcrumbsForForm);

            } else {
                $rootScope.cirBreadcrumbsForForm[$rootScope.cirBreadcrumbsForForm.length - 1].label = c.data.f.title;
                $scope.$emit('sp.update.breadcrumbs', $rootScope.cirBreadcrumbsForForm);



                message = $scope.data.updatedMsg;
            }



            $scope.data.hideRelatedLists = hideRelatedLists();
            $scope.$emit(eventName, $scope.data.f._fields);
            $rootScope.$broadcast(eventName, $scope.data.f._fields);
            $scope.status = message;
            spUtil.addTrivialMessage(message);
        };
        $timeout(clearStatus, 2000);

    }

    var ctrl = this;
    // switch forms
    var unregister = $scope.$on('$sp.list.click', onListClick);
    $scope.$on("$destroy", function() {
        unregister();
    });

    function onListClick(evt, arg) {
        loadForm(arg.table, arg.sys_id);
    }

    function loadForm(table, sys_id) {
        var f = {};
        $scope.data.table = f.table = table;
        $scope.data.sys_id = f.sys_id = sys_id;
        f.view = $scope.data.view;
        return $scope.server.update().then(setupAttachmentHandler);
    }

    function openRelatedList(e, queryString) {
        // todo: Open this in a modal
        $location.search(queryString);
        e.preventDefault();
    }

    $scope.$on('spModel.fields.rendered', function() {
        if (ctrl.panels)
            ctrl.panels.removeClass('shift-out').addClass('shift-in');
    });

    var g_form;
    $scope.$on('spModel.gForm.initialized', function(e, gFormInstance) {
        if (gFormInstance.getTableName() == $scope.data.f.table) {
            g_form = gFormInstance;
            //PG: 01/06/2020 - STRY0102407: show Open Events Timeline button on investigation form
            if (g_form.getTableName() !== c.data.investigationTable) {
                return;
            }
            checkForEventTimeline(g_form.getValue('type'));
        }
    });

    var checkForEventTimeline = function(value) {
        if (value === 'formal') {
            c.data.showEventsBtn = true;
        } else {
            c.data.showEventsBtn = false;
        }
    }

    // Show or hide related lists
    $scope.$watch('data.f._related_lists', function() {
        $scope.data.hideRelatedLists = hideRelatedLists();
    }, true);

    function hideRelatedLists() {
        if (!$scope.data.f._related_lists)
            return true;

        if ($scope.options.hideRelatedLists == true)
            return true;

        if ($scope.data.sys_id == '-1')
            return true;

        // If all related lists are visible=false then hide
        if ($scope.data.f._related_lists.length > 0) {
            for (var i in $scope.data.f._related_lists) {
                var list = $scope.data.f._related_lists[i];
                if (list.visible) {
                    return false;
                }
            }
        }
        return true;
    }

    function clearStatus() {
        $scope.status = "";
    }

    function setupAttachmentHandler() {
        $scope.attachmentHandler = new nowAttachmentHandler(appendSuccess, appendError);

        $timeout(function() {
            var sizeLimit = 1024 * 1024 * 24; // 24MB
            $scope.attachmentHandler.setParams($scope.data.table, $scope.data.f._attachmentGUID, sizeLimit);
        });

        $scope.$on('dialog.upload_too_large.show', function(e) {
            spUtil.addErrorMessage($scope.data.largeAttachmentMsg);
        });
    }
    setupAttachmentHandler();

    function appendSuccess() {
        spUtil.addTrivialMessage($scope.data.attachmentUploadSuccessMsg);
        $scope.$broadcast("sp.attachments.update", $scope.data.f._attachmentGUID);
    }

    function appendError(error) {
        $scope.errorMessages.push(error);
    }

    //Catch the click on the related list with $scope.$on('data_table.click', <function_name>); params are table, sys_id and whole item
    $scope.$on('data_table.click', function(e, parms) {
        var paramsRedirect = {
            id: 'cir_ciri_form',
            table: parms.record.targetTable,
            sys_id: parms.sys_id,
            breadcrumbs: 'true'
        };
        $location.search(paramsRedirect);
    });

    $scope.showRelatedList = function(table, field) {
        var relatedListUpdate = {
            tableName: table,
            fieldName: field
        };
        $scope.server.get(relatedListUpdate).then(function(response) {
            $scope.data.widgetList = response.data.widgetList;
        });
    };

    // HR: 08-04-2020. STRY0102405: Add Begin Investigation record to the Portal
    $scope.beginInvestigation = function() {
        if (g_form.getTableName() == 'x_fru_cir_incident' && c.data.hasImpact == false) {
            alert(c.data.needImpactMsg);
            return;
        }
        var input = {};
        input.action = 'begin_investigation';
        input.table = g_form.getTableName();
        input.sys_id = g_form.getUniqueValue();

        $scope.server.get(input).then(function(resp) {
            var s = {
                id: 'cir_ciri_form',
                table: 'x_fru_cir_investigation',
                sys_id: resp.data.investigationRec
            };
            var newURL = $location.search(s);
            spAriaFocusManager.navigateToLink(newURL.url());
        });
    };

    //Open widget with event timeline list
    //Only for Investigation records
    c.openEventList = function() {
        spModal.open({
            title: 'Events Timeline',
            buttons: [],
            widget: 'cir-ciri-event-timeline',
            widgetInput: {
                parentId: c.data.sys_id
            },
            size: 'lg'
        });
    };
    c.openContributingList = function() {

        spModal.open({
            //scope: $scope,
            title: 'Contributing Factors',
            buttons: [],
            widget: 'cir_ciri_contributing_factors',
            widgetInput: {
                table: c.data.contributingFactorTable,
                field: ['name'],
                investigation: c.data.sys_id
            },
            size: 'lg'
        });
    };
    $rootScope.$on('updateContributingFactorsCount', function(event, count) {
        var found = c.data.f._related_lists.find(function(related) {
            return related.table === c.data.contributingFactorM2MTable;
        });
        if (found) {
            found.count = count;
        }
    });
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel-title {&#13;
  word-wrap: break-word;&#13;
}&#13;
&#13;
.comment {&#13;
  font-weight: bold;&#13;
  margin-top: 2px;&#13;
  margin-bottom: 2px;&#13;
}&#13;
.mce-panel, .mce-btn {&#13;
  background-image: none;&#13;
  background-color: #f0f3f4;&#13;
}&#13;
&#13;
.action-btn {&#13;
  margin-right: 5px;&#13;
}&#13;
&#13;
.btn-event {&#13;
  padding-top: 4px;&#13;
  padding-bottom: 4px;&#13;
  font-size: 12px;&#13;
}&#13;
&#13;
.timeline-container {&#13;
  max-height: 50vh;&#13;
  height: 100%;&#13;
  overflow-y: auto;&#13;
}&#13;
&#13;
.panel .panel {&#13;
  height: auto !important;&#13;
}&#13;
&#13;
.attachment-button {&#13;
  .glyphicon-paperclip {&#13;
    font-size: 18px;&#13;
  }&#13;
}&#13;
&#13;
.empty-state-wrapper {&#13;
  width: 100%;&#13;
  height: 100%;&#13;
  align-items: center;&#13;
  display: flex;&#13;
  flex-direction: column;&#13;
  padding: 10vh 20px 20px;&#13;
&#13;
  .empty-state {&#13;
    border: 1px solid #e7e9eb;&#13;
    border-radius: 10px;&#13;
    max-width: 700px;&#13;
    padding: 30px 40px 20px;&#13;
    position: relative;&#13;
&#13;
    .empty-state-badge {&#13;
      top: -36px;&#13;
      left: 50%;&#13;
      position: absolute;&#13;
      height: 72px;&#13;
      width: 72px;&#13;
      -webkit-align-items: center;&#13;
      -ms-flex-align: center;&#13;
      align-items: center;&#13;
      border-radius: 100%;&#13;
      color: #ffffff;&#13;
      display: -webkit-flex;&#13;
      display: -ms-flexbox;&#13;
      display: flex;&#13;
      font-size: 40px;&#13;
      -webkit-justify-content: center;&#13;
      -ms-flex-pack: center;&#13;
      justify-content: center;&#13;
      margin-left: -36px;&#13;
      text-align: center;&#13;
    }&#13;
&#13;
    .empty-state-header {&#13;
      font-size: 30px;&#13;
      text-align: center;&#13;
      color: #343d47;&#13;
    }&#13;
&#13;
    .empty-state-content {&#13;
      ul {&#13;
        list-style: disc outside;&#13;
        margin: 0 0 10px 0;&#13;
        padding: 0 0 0 30px;&#13;
      }&#13;
    }&#13;
  }&#13;
}&#13;
&#13;
.relatedList a {&#13;
  cursor: pointer;&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description>Widget for showing the data on a record.</description>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>cir-ciri-form</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>CIR CIRI Form</name>
        <option_schema>[{"name":"disableUIActions","label":"Disable UI Actions on Form","type":"boolean"},{"name":"showFormView","label":"Display current form view","type":"boolean"},{"name":"omitHeaderOptions","label":"Omit header options icon","type":"boolean"}]</option_schema>
        <public>false</public>
        <roles>x_fru_cir.user</roles>
        <script><![CDATA[// form functionality - URL parameter driven
(function($sp, input, data, options, gs) {
    /* "use strict"; -linter issues */
    data.msgs = {};
    data.msgs.closeModalMsg = gs.getMessage("Close");
    // populate the 'data' variable
    var cirCaseRiskImpGenericUtils = CIRCaseRiskImpGenericUtilsFP();
    data.attachmentUploadSuccessMsg = gs.getMessage("Attachment upload was successful");
    data.recordAddedMsg = gs.getMessage("Record Added");
    data.updatedMsg = gs.getMessage("updated_uppercase");
    data.exportPDFMsg = gs.getMessage("Export to PDF");
    data.exportPDFLandMsg = gs.getMessage("export_to_PDF_landscape");
    data.addAttachmentMsg = gs.getMessage("Add an attachment");
    data.largeAttachmentMsg = gs.getMessage("attachment_max_size", "24MB");
    data.needImpactMsg = gs.getMessage('need_impact_record');

    data.isAdmin = gs.hasRole('x_fru_cir.admin');
    data.emptyStateTemplate = options.empty_state_template;
    data.disableUIActions = options.disableUIActions || false;
    data.hideRelatedLists = options.hideRelatedLists || false;
    data.showCaseLocation = false;

    //PG: 01/06/2020 - STRY0102407
    data.investigationTable = CIRConstants.Tables.INVESTIGATION;
	data.contributingFactorTable = CIRConstants.Tables.CONTRIBUTING_FACTOR;
	data.contributingFactorM2MTable = CIRConstants.Tables.M2M_CONTRIBUTING_FACTOR;
	
    data.showEventsBtn = false;

    if(input && !input.tableName && !input.fieldName) {
        data.table = input.table;
        data.sys_id = input.sys_id;
        data.view = input.view;

        var result = {};
        if(input._fields) {
            result = $sp.saveRecord(input.table, input.sys_id, input._fields);
        }

        if(input.sys_id == '-1') {
            data.sys_id = result.sys_id;
            data.isNewRecord = true;
        }

        if(input.action == 'delete') {

            var delRec = new GlideRecordSecure(data.table);
            data.isValid = delRec.get(data.sys_id);
            if(data.isValid && delRec.canDelete()) {
                delRec = new GlideRecordSecure(data.table);
                delRec.addQuery('sys_id', data.sys_id);
                delRec.query();
                while(delRec.next()) {
                    gs.info('Record "' + delRec.number + '" deleted from the table "' + data.table + '"');
                    delRec.deleteRecord();
                }
				
            } else {
                return;
            }
        }

        // End_MA

    } else {
        data.table = $sp.getParameter("t") || $sp.getParameter("table") || $sp.getParameter("sl_table") || options
            .table;
        data.sys_id = $sp.getParameter("sys_id") || $sp.getParameter("sl_sys_id") || options.sys_id;
        data.view = $sp.getParameter("v") || $sp.getParameter("view") || options.view; // no default
    }

    data.query = $sp.getParameter("query") || options.query;
    data.f = {};
    if(!data.table || !data.sys_id) {
        return;
    }

    var rec = new GlideRecordSecure(data.table);
    data.isValid = rec.get(data.sys_id) || data.sys_id == "-1";
	data.canDeleteRecord = rec.canDelete() && data.isValid && data.sys_id != "-1";
    if(!data.isValid) {
        return;
    }

    switch (data.table) {
        case 'x_fru_cir_injury_illness':
            data.showInjury = true;
            data.injuryButtonLabel = gs.getMessage('Mark Body Location');
            break;

        case 'x_fru_cir_near_miss':
        case 'x_fru_cir_hazard':
        case 'x_fru_cir_incident':
        case 'x_fru_cir_case':
            // For some reason, there can be a map in the field even if the field on the record itself has no value stored in it
            // getDisplayValue forces an extra query for sys_attachment (potentially two) in addition to the query for location
            data.showCaseLocation = rec.location.x_fru_cir_map.getDisplayValue().length != 0;
            if(data.showCaseLocation) {
                data.caseButtonLabel = gs.getMessage('Mark Case Location');
            }
    }

    // HR: 08-04-2020. STRY0102405: Add Begin Investigation record to the Portal
    // HR: begin investigation data block
    if(input && input.action == 'begin_investigation') {
        data.investigationRec = new CIRRiskManagementUtils().CreateInvestigation(rec);
        rec.state = cirCaseRiskImpGenericUtils.GetStateValue('under_investigation');
        rec.update();
    }

    data.beginInvestigation = rec.state == cirCaseRiskImpGenericUtils.GetStateValue('in_review') && gs.getUser()
        .isMemberOf(rec.assignment_group.toString()) && gs.hasRole('x_fru_cir.investigator');
    data.beginInvBtnLabel = gs.getMessage('Begin Investigation');
    data.hasImpact = new CIRImpactUtils().CheckForImpact(rec.sys_id.toString());
    // HR: end of begin investigation data block

    data.canWrite = rec.canWrite() && rec.active == true;
    data.canAttach = data.canWrite && gs.hasRole(gs.getProperty('glide.attachment.role'));
    data.f = $sp.getForm(data.table, data.sys_id, data.query, data.view);

    // Activity formatter is hardcoded to set specific options
    for(var f in data.f._formatters) {
        var fm = data.f._formatters[f];
        if(fm.formatter == "activity.xml") {
            fm.hardcoded = true;
            fm.widgetInstance = $sp.getWidget('widget-ticket-conversation', {
                table: data.table,
                sys_id: data.sys_id,
                includeExtended: true,
                title: "${Activity}",
                placeholder: "${Add a comment}",
                btnLabel: "${Post}"
            });
        } else {
            fm.widgetInstance = $sp.getWidget(fm.widget, data);
        }
    }
	
	data.includeBreadcrumbs = $sp.getParameter('breadcrumbs') === 'true';

    if(data.f && data.f._related_lists.length > 0) {
        var tableName = input && input.tableName ? input.tableName : data.f._related_lists[0].table;
        var fieldName = input && input.fieldName ? input.fieldName : data.f._related_lists[0].field;

        data.show_new_button =
            cirCaseRiskImpGenericUtils.ShowNewButtonRelatedList(data.f.table, data.f.sys_id, tableName,
                fieldName);

        data.widgetForRelatedList = 'cir-ciri-data-table';
        data.widgetListOptions = {
			newRedirection : 'cir_ciri_form',
            table: tableName,
            filter: fieldName + '=' + data.sys_id,
            window_size: 5,
            show_new: data.show_new_button,
			breadcrumbs: 'true'
        };
        data.widgetList = [];
        data.widgetList.push($sp.getWidget(data.widgetForRelatedList, data.widgetListOptions));

        data.widgetForFormTemplate = 'widget-form';
        data.widgetFormTemplateOptions = {
            table: '',
            sys_id: ''
        };
    }

})($sp, input, data, options, gs);]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>Jorge.Diogo@fruitionpartners.pt</sys_created_by>
        <sys_created_on>2020-06-25 15:46:52</sys_created_on>
        <sys_id>016159bedb61d81003b3533fd39619dc</sys_id>
        <sys_mod_count>91</sys_mod_count>
        <sys_name>CIR CIRI Form</sys_name>
        <sys_package display_value="Corporate Incident Response" source="x_fru_cir">265c101f13ab44100b8670a76144b0a2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Corporate Incident Response">265c101f13ab44100b8670a76144b0a2</sys_scope>
        <sys_update_name>sp_widget_016159bedb61d81003b3533fd39619dc</sys_update_name>
        <sys_updated_by>hugo.reis</sys_updated_by>
        <sys_updated_on>2021-01-04 08:40:00</sys_updated_on>
        <template><![CDATA[<div ng-if="!data.isValid && !data.emptyStateTemplate" class="panel panel-default">
    <div class="panel-body wrapper-lg text-center">
        ${record_not_found}
    </div>
</div>

<div ng-if="!data.isValid && data.emptyStateTemplate" class="panel-shift">
    <div class="empty-state-wrapper panel panel-default" ng-include="data.emptyStateTemplate"></div>
</div>

<div ng-if="data.isValid" class="panel-shift">
    <div class="" ng-if="!data.f._view.length && data.hideRelatedLists && data.emptyStateTemplate">
        <div class="empty-state-wrapper panel panel-default" ng-include="data.emptyStateTemplate"></div>
    </div>

    <div class="" ng-if="!data.f._view.length && data.hideRelatedLists && !data.emptyStateTemplate">
        <div class="panel panel-default">
            <div class="panel-heading"><span class="panel-title">{{data.f.title}}</span> <span
                    ng-if="options.showFormView == 'true' && data.f.view != ''">[{{data.f.view_title}} view]</span>
            </div>
            <div class="panel-body wrapper-lg text-center">
                ${no_elements_to_display}
            </div>
        </div>
    </div>

    <div class="panel panel-default" ng-if="data.f._view.length || !data.hideRelatedLists">
        <div class="panel-heading" ng-if="data.f.title.length" sp-context-menu="getUIActionContextMenu(event)">
            <span class="dropdown m-r-xs"
                ng-if="(data.isAdmin || getUIActions('context').length > 0) && options.omitHeaderOptions != 'true'">
                <span class="dropdown-toggle glyphicon glyphicon-menu-hamburger" style="line-height: 1.4em"
                    id="adminMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"></span>
                <ul class="dropdown-menu" aria-labelledby="adminMenu">
                    <li ng-if="::data.isAdmin"><a href="/{{data.f.table}}.do?sys_id={{data.f.sys_id}}"
                            target="_blank">${open_in_ platform}</a></li>
                    <li ng-if="::data.isAdmin" class="dropdown-header">${Configure}</li>
                    <li ng-if="::data.isAdmin"><a
                            href="/slushbucket.do?sysparm_referring_url={{adminMenu.encodedPageUrl}}&sysparm_list={{data.f._sections[0].id}}&sysparm_form=section&sysparm_view={{data.f.view}}"
                            target="_blank">${Form Layout}</a></li>
                    <li ng-if="::data.isAdmin"><a
                            href="/slushbucket.do?sysparm_referring_url={{adminMenu.encodedPageUrl}}&sysparm_list={{data.f.table}}&sysparm_form=related_list&sysparm_view={{data.f.view}}"
                            target="_blank">${Related Lists}</a></li>
                    <li ng-if="::data.isAdmin"><a
                            href="/list?id=lf&table=sys_ui_policy&filter=table%3D{{data.f.table}}%5EORtableIN{{data.f.table}},sys_metadata%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10"
                            ng-click="openRelatedList($event, {id:'lf', table: 'sys_ui_policy', filter: 'table%3D{{data.f.table}}%5EORtableIN{{data.f.table}},sys_metadata%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10'})">${UI
                            Policies} <span class="badge pull-right"
                                ng-if="f.policy.length">{{f.policy.length}}</span></a></li>
                    <li ng-if="::data.isAdmin"><a
                            href="/list?id=lf&table=sys_script_client&filter=table%3D{{data.f.table}}%5EORtableIN{{data.f.table}},sys_metadata%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10"
                            ng-click="openRelatedList($event, {id: 'lf', table: 'sys_script_client', filter: 'table%3D{{data.f.table}}%5EORtableIN{{data.f.table}},sys_metadata%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10'})">${Client
                            Scripts} <span class="badge pull-right"
                                ng-if="adminMenu.getClientScriptCount()">{{adminMenu.getClientScriptCount()}}</span></a>
                    </li>
                    <li ng-if="getUIActions('context').length > 0 &&  data.isAdmin" role="separator" class="divider">
                    </li>
                    <li ng-repeat="action in getUIActions('context')"><a href=""
                            ng-click="triggerUIAction(action)">{{action.name}}</a></li>
                    <li ng-if="::data.isAdmin || getUIActions('context').length > 0" role="separator" class="divider">
                    </li>
                    <li><a target="_new"
                            href="/{{data.f.table}}.do?PDF&sys_id={{data.sys_id}}&sysparm_view={{data.f.view}}">${Export
                            to PDF}</a></li>
                    <li><a target="_new"
                            href="/{{data.f.table}}.do?PDF&landscape=true&sys_id={{data.sys_id}}&sysparm_view={{data.f.view}}">${export_to_PDF_landscape}</a>
                    </li>
                </ul>
            </span>
            <span class="panel-title">{{data.f.title}}</span> <span
                ng-if="options.showFormView == 'true' && data.f.view != ''">[{{data.f.view_title}} view]</span>
            <div ng-if="attachmentHandler && data.canAttach" title="{{::data.addAttachmentMsg}}"
                class="pull-right attachment-button">
                <sp-attachment-button></sp-attachment-button>
            </div>
            <button class="btn btn-primary action-btn btn-event pull-right" id="addEvent" ng-if="data.showEventsBtn"
                onclick="c.openEventList()">${Open Events Timeline}</button>
           <button class="btn btn-primary action-btn btn-event pull-right" id="addContributing" ng-if="data.table === data.investigationTable"
                onclick="c.openContributingList()">${Contributing Factors}</button>
          
        </div>
        <div class="panel-body">
            <!-- performance debug -->
            <div ng-if="data.show_sql">
                <div class="comment">
                    <span ng-if="data.f._perf.sql_count">${SQL_statements} {{data.f._perf.sql_count}}, </span>
                    <span>${Time} {{data.f._perf.time}}</span>
                </div>
                <div ng-repeat="s in data.f._perf.sql" class="{{s.type}}">
                    {{s.statement}}
                </div>
            </div>
            <!-- attachments -->
            <sp-attachment-manager table="data.table" sys-id="data.f._attachmentGUID" omit-edit="!data.canAttach">
            </sp-attachment-manager>
            <!-- form -->
            <div>
                <sp-model form_model="data.f" mandatory="mandatory"></sp-model>
            </div>
            <!-- UI Action Links -->
            <div ng-if="getUIActions('link').length > 0">
                <label style="margin: 0;">${Related Links}</label>
                <div ng-repeat="action in getUIActions('link')">
                    <a href ng-click="triggerUIAction(action)">{{action.name}}</a>
                </div>
            </div>
            <!-- related lists -->
            <div ng-if="!data.hideRelatedLists">
                <label style="margin: 0">${Related Lists}</label>
                <div style="margin-bottom: 7px; padding-bottom: 7px; border-bottom: 1px solid #f5f5f5;">
                    <span ng-repeat="rl in data.f._related_lists" ng-if="rl.visible" class="relatedList">

                        <!-- MA: Start: Added the below html sections to rename the Related List -->

                        <!-- Incident Realted Lists -->
                        <a ng-if="rl.type != 'REL' && data.table == 'x_fru_cir_incident' && rl.table == 'x_fru_cir_m2m_incidents_hazards'"
                            ng-click="showRelatedList(rl.table, rl.field)"> ${cir_case_management_hazards_related_list}
                            <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
                        </a>

                        <a ng-if="rl.type != 'REL' && data.table == 'x_fru_cir_incident' && rl.table != 'x_fru_cir_m2m_incidents_hazards'"
                            ng-click="showRelatedList(rl.table, rl.field)"> {{rl.plural}}
                            <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
                        </a>

                        <!-- Near Misses Realted Lists -->
                        <a ng-if="rl.type != 'REL' && data.table == 'x_fru_cir_near_miss' && rl.table == 'x_fru_cir_m2m_near_miss_hazards'"
                            ng-click="showRelatedList(rl.table, rl.field)"> ${cir_case_management_hazards_related_list}
                            <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
                        </a>

                        <a ng-if="rl.type != 'REL' && data.table == 'x_fru_cir_near_miss' && rl.table != 'x_fru_cir_m2m_near_miss_hazards'"
                            ng-click="showRelatedList(rl.table, rl.field)"> {{rl.plural}}
                            <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
                        </a>
                      
                      	<!-- Hazard Related Lists -->
                        <a ng-if="rl.type != 'REL' && data.table == 'x_fru_cir_hazard' && rl.table == 'x_fru_cir_m2m_near_miss_hazards'"
                            ng-click="showRelatedList(rl.table, rl.field)"> ${cir_case_management_near_miss_related_list}
                            <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
                        </a>
                      
                      	<a ng-if="rl.type != 'REL' && data.table == 'x_fru_cir_hazard' && rl.table == 'x_fru_cir_m2m_incidents_hazards'"
                            ng-click="showRelatedList(rl.table, rl.field)"> ${cir_case_management_incident_related_list}
                            <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
                        </a>

                        <a ng-if="rl.type != 'REL' && data.table == 'x_fru_cir_hazard' && rl.table != 'x_fru_cir_m2m_near_miss_hazards' && rl.table != 'x_fru_cir_m2m_incidents_hazards'"
                            ng-click="showRelatedList(rl.table, rl.field)"> {{rl.plural}}
                            <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
                        </a>

                        <!-- Investigation Realted Lists -->
                        <a ng-if="rl.type != 'REL' && data.table == 'x_fru_cir_investigation' && rl.table == 'sysapproval_approver'"
                            ng-click="showRelatedList(rl.table, rl.field)">${approvers_relatedList_name}
                            <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
                        </a>

                        <a ng-if="rl.type != 'REL' && data.table == 'x_fru_cir_investigation' && rl.table != 'sysapproval_approver'"
                            ng-click="showRelatedList(rl.table, rl.field)">{{rl.plural}}
                            <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
                        </a>

                        <!-- Other Realted Lists -->
                        <a ng-if="rl.type != 'REL' && data.table != 'x_fru_cir_incident' && data.table != 'x_fru_cir_near_miss' && data.table != 'x_fru_cir_hazard' && data.table != 'x_fru_cir_investigation'"
                            ng-click="showRelatedList(rl.table, rl.field)">{{rl.plural}}
                            <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
                        </a>

                        <!--END: MA-->

                        <a ng-if="rl.type == 'REL'" ng-click="showRelatedList(rl.table, rl.field)">{{rl.label}}
                            <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
                        </a>

                        <span ng-if="!$last" style="padding-left: .5em; padding-right: .5em;"> | </span>
                    </span>
                    <div ng-if="data.widgetList" ng-repeat="widget in data.widgetList">
                        <sp-widget widget="widget"></sp-widget>
                        <div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel-footer">
                <button ng-mousedown="triggerUIAction(action)" ng-repeat="action in getUIActions('button')"
                    class="btn btn-default action-btn">{{action.name}}</button>
                <span>{{status}}</span>
                <button ng-if="getPrimaryAction()" type="submit" ng-click="triggerUIAction(getPrimaryAction())"
                    class="btn btn-primary action-btn pull-right">${Save} <span
                        ng-if="saveButtonSuffix">(${{{saveButtonSuffix}}})</span></button>
                <button
                    type="submit" ng-click="deleteRecord()"
                    class="btn btn-primary action-btn pull-right"
                    ng-style="({'visibility': data.canDeleteRecord ? 'visible' : 'hidden'})">${Delete}</button>
                <button ng-if="data.beginInvestigation" type="submit" ng-click="beginInvestigation()"
                    class="btn btn-primary action-btn pull-right">{{data.beginInvBtnLabel}}</button>
                <button ng-if="data.showInjury" ng-click="sendToInjury()"
                    class="btn btn-default action-btn pull-right">{{data.injuryButtonLabel}}</button>
                <button ng-if="data.showCaseLocation" ng-click="sendToCaseLocation()"
                    class="btn btn-default action-btn pull-right">{{data.caseButtonLabel}}</button>
                <div style="clear: both;"></div>
                <div ng-if="mandatory.length" class="alert alert-info" style="margin-top: .5em">
                    <span ng-if="mandatory.length > 0">${required_information} </span>
                    <span ng-repeat="f in mandatory" class="label label-danger"
                        style="margin-right: .5em; display: inline-block;">{{f.label}}</span>
                </div>
            </div>
        </div>
    </div>
</div>]]></template>
    </sp_widget>
</record_update>
