<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_fru_cir_message_set</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>cir_add_message_sets_to_parametrization</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var language = gs.getSession().getLanguage() ? gs.getSession().getLanguage() : 'en';

	var param = new GlideRecord(CIRConstants.Tables.PARAMETRIZATION);
	param.addEncodedQuery('dimension.sys_id=' + current.dimension);
	var paramCountries = current.countries.split(",");
	var qc1;
	for (var i = 0; i < paramCountries.length; i++){
		var addressCountry = new GlideRecord(CIRConstants.Tables.SECURITY_ADDRESS_VALUE);
		if (addressCountry.get(paramCountries[i])) {
			var country = new GlideRecord('sys_choice');
			country.addEncodedQuery('element=country^name=cmn_location^language=' + language + "^value=" + addressCountry.value);
			country.query();
			if (country.next()){
				var label = country.label;
				if (i === 0) {
					qc1 = param.addQuery('country', label);
				} else{
					qc1.addOrCondition('country', label);
				}
			}
		}
	}

	var paramCategories = current.situation_category.split(",");
	var qc2;
	for (var j = 0; j < paramCategories.length; j++){
		if (j === 0){
			qc2 = param.addQuery('category', paramCategories[j]);
		} else {
			qc2.addOrCondition('category', paramCategories[j]);
		}
	}
	param.query();

	if (!param.hasNext()) {
		return;
	} else {
		var existing = new GlideRecord(CIRConstants.Tables.MSG_SET_PARAM_M2M);
		existing.addQuery('message_set', current.sys_id);
		existing.query();
		while (existing.next()) {
			existing.deleteRecord();
		}
		if(paramCountries[0] && paramCategories[0]){	
			while (param.next()) {
				var nGRET = new GlideRecord(CIRConstants.Tables.MSG_SET_PARAM_M2M);
				nGRET.initialize();
				nGRET.setValue('message_set', current.sys_id);
				nGRET.setValue('situation_parametrization', param.sys_id);
				nGRET.insert();
			}
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>Paulo.Gomes@fruitionpartners.pt</sys_created_by>
        <sys_created_on>2020-06-23 15:56:11</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>1670c382dba9581003b3533fd3961983</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>cir_add_message_sets_to_parametrization</sys_name>
        <sys_overrides/>
        <sys_package display_value="Corporate Incident Response" source="x_fru_cir">265c101f13ab44100b8670a76144b0a2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Corporate Incident Response">265c101f13ab44100b8670a76144b0a2</sys_scope>
        <sys_update_name>sys_script_1670c382dba9581003b3533fd3961983</sys_update_name>
        <sys_updated_by>Paulo.Gomes@fruitionpartners.pt</sys_updated_by>
        <sys_updated_on>2020-06-25 09:52:42</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=1670c382dba9581003b3533fd3961983"/>
</record_update>
