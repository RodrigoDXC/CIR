<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_fru_cir_protection_service_order</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_fru_cir_protection_service_order">assigned_vehicleVALCHANGES^EQ<item endquery="false" field="assigned_vehicle" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>cir_vehicle_change_update_unv_record</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	/**
	*  This BR is checking from changes on the vehicle_assigned field
	*  It then checks if already exists a vehicle unavailability record for this Service Order
	*  if so, the unavailability record is updated
	*  if not, one unavailability record is created
	**/
	var vehicle = current.assigned_vehicle.toString();

	var unavailabilityRec = new CIRFleetUtils().GetUnavailability(current.sys_id.toString());
	
	if (unavailabilityRec + '' !== '') {
		new CIRFleetUtils().UpdateUnavailabilityRec(unavailabilityRec, vehicle);
	} else {
		new CIRFleetUtils().CreateUnavailabilityRec(vehicle, current.start_date, current.end_date, current.sys_id.toString());
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>Paulo.Gomes@fruitionpartners.pt</sys_created_by>
        <sys_created_on>2020-07-30 12:46:53</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c218f44adb12dc10d4a73533f396190e</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>cir_vehicle_change_update_unv_record</sys_name>
        <sys_overrides/>
        <sys_package display_value="Corporate Incident Response" source="x_fru_cir">265c101f13ab44100b8670a76144b0a2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Corporate Incident Response">265c101f13ab44100b8670a76144b0a2</sys_scope>
        <sys_update_name>sys_script_c218f44adb12dc10d4a73533f396190e</sys_update_name>
        <sys_updated_by>Paulo.Gomes@fruitionpartners.pt</sys_updated_by>
        <sys_updated_on>2020-08-05 13:13:11</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=c218f44adb12dc10d4a73533f396190e"/>
</record_update>
