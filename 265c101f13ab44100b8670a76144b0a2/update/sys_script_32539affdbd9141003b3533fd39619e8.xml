<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_fru_cir_situation</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>cir_situation_remove_locations</name>
        <order>50</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	if (current.country.nil()) {
        current.buildings = "";
        current.location_groups = "";
        current.virtual_locations = "";
        gs.addErrorMessage(gs.getMessage("cir_sit_remove_locations_all"));
    } else {
        var removedLocations = [];
        var newValue = [];
        var countriesArray = current.country.split(",");
        var countriesLabels = current.country.getDisplayValue().split(",");

        //creates the encoded query to use in the virtual locations table
        var virtualEncodedQuery = [];
        countriesArray.forEach(function (element) { virtualEncodedQuery.push("countryLIKE" + element); });

        //creates the encoded query to use in the virtual locations table
        var groupsEncodedQuery = [];
        countriesArray.forEach(function (element) { groupsEncodedQuery.push("countriesLIKE" + element); });

        if (!current.buildings.nil()) {
            newValue = [];
            var buildings = current.buildings.split(",");
            var buildingsLabels = current.buildings.getDisplayValue().split(",");

            buildings.forEach(function (building, index, array) {
                var grBuilding = new GlideRecord(CIRConstants.Tables.SECURITY_LOCATION);
                grBuilding.addQuery("sys_id", building);
                grBuilding.query();

                while(grBuilding.next()){
                    var recordCountry = grBuilding.getDisplayValue("country");
                    var contains = countriesLabels.toString().indexOf(recordCountry.toString());

                    if (contains !== -1) {
                        newValue.push(building);
                    } else {
                        removedLocations.push(buildingsLabels[index]);
                    }
                }
            });
            current.setValue("buildings", newValue.join(","));
        }
                                          
        if (!current.location_groups.nil()) {
            newValue = [];
            var locationGroups = current.location_groups.split(",");
            var locationGroupsLabels = current.location_groups.getDisplayValue().split(",");

            locationGroups.forEach(function (locationGroup, index, array) {
                var grGroups = new GlideRecord(CIRConstants.Tables.LOCATION_GROUP);
                grGroups.addQuery("sys_id", locationGroup);
                grGroups.addEncodedQuery(groupsEncodedQuery.join("^OR"));
                grGroups.query();

                if (grGroups.hasNext()) {
                    newValue.push(locationGroup);
                }else{
                    removedLocations.push(locationGroupsLabels[index]);
                }
            });
            current.setValue("location_groups", newValue.join(","));
        }
                                          
        if (!current.virtual_locations.nil()) {
            newValue = [];
            var virtualLocations = current.virtual_locations.split(",");
            var virtualLocationsLabels = current.virtual_locations.getDisplayValue().split(",");

            virtualLocations.forEach(function (virtualLocation, index, array) {
                var grVirtual = new GlideRecord(CIRConstants.Tables.SECURITY_VIRTUAL_LOCATION);
                grVirtual.addQuery("sys_id", virtualLocation);
                grVirtual.addEncodedQuery(virtualEncodedQuery.join("^OR"));
                grVirtual.query();

                if (grVirtual.hasNext()) {
                    newValue.push(virtualLocation);
                }else{
                    removedLocations.push(virtualLocationsLabels[index]);
                }
            });
            current.setValue("virtual_locations", newValue.join(","));
        }

        if (removedLocations.length > 0) {
			gs.addErrorMessage(gs.getMessage("cir_sit_remove_locations") + " " + removedLocations.join(","));
        }
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>Paulo.Gomes@fruitionpartners.pt</sys_created_by>
        <sys_created_on>2020-06-16 12:56:43</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>32539affdbd9141003b3533fd39619e8</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>cir_situation_remove_locations</sys_name>
        <sys_overrides/>
        <sys_package display_value="Corporate Incident Response" source="x_fru_cir">265c101f13ab44100b8670a76144b0a2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Corporate Incident Response">265c101f13ab44100b8670a76144b0a2</sys_scope>
        <sys_update_name>sys_script_32539affdbd9141003b3533fd39619e8</sys_update_name>
        <sys_updated_by>Paulo.Gomes@fruitionpartners.pt</sys_updated_by>
        <sys_updated_on>2020-06-25 10:16:58</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=32539affdbd9141003b3533fd39619e8"/>
</record_update>
